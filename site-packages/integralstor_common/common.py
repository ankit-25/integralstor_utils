import os


def get_platform():
  platform = None
  lines = None
  try:
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    with open('%s/platform'%product_root, 'r') as f:
      lines = f.readlines()
    if lines and lines[0].strip().lower() in ['unicell', 'gridcell']:
      platform = lines[0].strip().lower()
    else:
      raise Exception('Unrecognized platform type')
  except Exception, e:
    return None, "Error retrieving platform type : %s"%str(e)
  else:
    return platform, None

def get_hardware_platform():
  platform = None
  lines = None
  try:
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    with open('%s/platform'%product_root, 'r') as f:
      lines = f.readlines()
    if lines and lines[1].strip().lower() == "self":
      platform = lines[1].strip().lower()
    else:
      platform = "Custom"
  except Exception, e:
    return None, "Error retrieving platform type : %s"%str(e)
  else:
    return platform, None

def use_salt():
  use = False
  try:
    platform, err = get_platform()
    if err:
      raise Exception(err)
    if platform and platform == 'gridcell':
      use = True
  except Exception, e:
    return False, "Error checking saltstack usage : %s"%str(e)
  else:
    return use, None

def get_product_root():
  return '/opt/integralstor', None

def get_platform_root():
  root = None
  try:
    platform, err = get_platform()
    if err:
      raise Exception(err)
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    if not platform:
      raise Exception('Could not determine platform')
    root = '%s/integralstor_%s'%(product_root, platform)
  except Exception, e:
    return None, "Error retrieving platform root : %s"%str(e)
  else:
    return root, None

def get_pki_dir():
  dir = None
  try:
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    dir = '%s/pki'%product_root
  except Exception, e:
    return None, "Error retrieving certificates location : %s"%str(e)
  else:
    return dir, None

def is_production():

  ret = False
  try:
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    if os.path.isfile('%s/devel_env'%product_root):
      ret =  False
    else:
      ret =  True
  except Exception, e:
    return None, 'Error getting production setting: %s'%str(e)
  else:
    return ret, None

def get_defaults_dir():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/defaults"%root
  except Exception, e:
    return None, 'Error getting defaults directory : %s'%str(e)
  else:
    return ret, None

def get_bin_dir():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/bin"%root
  except Exception, e:
    return None, 'Error getting bin directory : %s'%str(e)
  else:
    return ret, None


def get_tmp_path():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/tmp"%root
  except Exception, e:
    return None, 'Error getting tmp directory : %s'%str(e)
  else:
    return ret, None

def get_python_scripts_path():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/scripts/python"%root
  except Exception, e:
    return None, 'Error getting python scripts directory : %s'%str(e)
  else:
    return ret, None

def get_common_python_scripts_path():
  ret = None
  try:
    product_root, err = get_product_root()
    if err:
      raise Exception(err)
    ret =  "%s/integralstor_common/scripts/python"%product_root
  except Exception, e:
    return None, 'Error getting python scripts directory : %s'%str(e)
  else:
    return ret, None
def get_shell_scripts_path():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/scripts/shell"%root
  except Exception, e:
    return None, 'Error getting shell scripts directory : %s'%str(e)
  else:
    return ret, None

def get_admin_vol_name():
  return "integralstor_admin_vol", None

def get_config_dir():
  ret = None
  try:
    root, err = get_platform_root()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/config"%root
  except Exception, e:
    return None, 'Error getting config directory : %s'%str(e)
  else:
    return ret, None

def get_salt_master_config():
  return '/etc/salt/master', None

def get_krb5_conf_path():
  return '/etc', None

def get_smb_conf_path():
  return '/etc/samba', None

def get_system_status_path():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/status"%root
  except Exception, e:
    return None, 'Error getting system status directory : %s'%str(e)
  else:
    return ret, None

def get_log_folder_path():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve platform root')
    ret =  "%s/logs"%root
  except Exception, e:
    return None, 'Error getting logs directory : %s'%str(e)
  else:
    return ret, None

def get_ntp_conf_path():
  return "/etc", None

def get_db_path():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve config root')
    ret =  "%s/db/integral_view_config.db"%root
  except Exception, e:
    return None, 'Error getting system database directory : %s'%str(e)
  else:
    return ret, None

def get_batch_files_path():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve config root')
    ret =  "%s/batch_processes"%root
  except Exception, e:
    return None, 'Error getting system batch processes directory : %s'%str(e)
  else:
    return ret, None

def get_devel_files_path():
  return "/opt/integralstor/integralstor_gridcell/devel/files", None

def get_audit_dir():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve config root')
    ret =  "%s/logs/audit"%root
  except Exception, e:
    return None, 'Error getting system audit logs directory : %s'%str(e)
  else:
    return ret, None

def get_audit_url_component():
  return "internal_audit", None

def get_audit_url_host():
  return "gridcell-pri.integralstor.lan", None

def get_alerts_dir():
  ret = None
  try:
    root, err = get_config_dir()
    if err:
      raise Exception(err)
    if not root:
      raise Exception('Could not retrieve config root')
    ret =  "%s/logs/alerts"%root
  except Exception, e:
    return None, 'Error getting system alerts log directory : %s'%str(e)
  else:
    return ret, None

def get_alerts_url_component():
  return "raise_alert", None

def get_alerts_url_host():
  return "gridcell-pri.integralstor.lan", None

# Utility function, when given a path will create if the directory does not exist.
def get_or_create_dir(path):
  try:
    if not os.path.exists(path):
      os.makedirs(path)
    else:
      pass
    return True,None
  except Exception,e:
    return None,e

def main():
  print get_platform()

if __name__ == "__main__":
  main()
