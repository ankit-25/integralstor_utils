import command, os, subprocess


def get_service_status(service):
  d = {}
  try:
    (ret, rc), err = command.execute_with_rc('service %s status'%service[0])
    if err:
      raise Exception(err)
    d['status_code'] = rc
    if rc == 0:
      d['status_str'] = 'Running'
    elif rc == 3:
      d['status_str'] = 'Stopped'
    elif rc == 1:
      d['status_str'] = 'Error'
    d['output_str'] = ''
    out, err = command.get_output_list(ret)
    if err:
      raise Exception(err)
    if out:
      d['output_str'] += ','.join(out)
    err, e = command.get_error_list(ret)
    if e:
      raise Exception(e)
    if err:
      d['output_str'] += ','.join(err)
  except Exception, e:
    return None, 'Error retrieving service status : %s'%str(e)
  else:
    return d, None

def change_service_status(service, action):
  out = None
  try:
    if os.path.exists('/tmp/cout'):
      os.remove('/tmp/cout')
    cmd = '/sbin/service %s %s'%(service, action)
    #print cmd
    with open('/tmp/cout', 'w') as f:
      proc = subprocess.Popen(cmd.split(), stdout = f, stderr = f, close_fds = True, universal_newlines=True)
      proc.wait()
      ret = proc.communicate()
    if os.path.exists('/tmp/cout'):
      with open('/tmp/cout', 'r') as f:
        out = f.readlines()
  except Exception, e:
    return None, 'Error modifying service status : %s'%str(e)
  else:
    return out, None
