import command
import os
import socket
from shutil import copyfile


def _get_ssh_dir(user):
    return '/%s/.ssh' % user


def _get_key_file(user='root'):
    return '%s/id_rsa.pub' % (_get_ssh_dir(user))


def _get_authorized_file(user='root'):
    return '%s/authorized_keys' % (_get_ssh_dir(user))


def generate_ssh_key(user="root"):
    try:
        if os.path.isfile(user):
            os.remove(user)
            os.remove("%s.pub" % user)
        cmd = "ssh-keygen -t rsa -f /root/.ssh/id_rsa -N '' "
        print cmd
        (ret, rc), err = command.execute_with_conf_and_rc(cmd, True)
        if err:
            raise Exception(err)
        else:
            os.mkdir('/%s/.ssh/' % user)
            copyfile('%s.pub' % user, _get_key_file(user))
            return True, None
    except Exception, e:
        print e
        return None, e


def regenerate_ssh_key(user="root"):
    try:
        if os.path.isfile(user):
            os.remove('/root/.ssh/id_rsa')
            os.remove('/root/.ssh/id_rsa.pub')
        cmd = "ssh-keygen -t rsa -f /root/.ssh/id_rsa -N '' "
        print cmd
        (ret, rc), err = command.execute_with_conf_and_rc(cmd, True)
        if err:
            raise Exception(err)
        else:
            return True, None
    except Exception, e:
        print e
        return None, e


def get_ssh_key(user='root'):
    pub_key = None
    try:
        with open(_get_key_file(user), 'r') as key:
            pub_key = key.read().replace('\n', '')
        return pub_key, None
    except Exception, e:
        return False, e


def test_ssh(user='root', ip=None):
    try:
        if ip and user:
            cmd = "ssh %s@%s 'zfs list'" % (user, ip)
            (status, ret), err = command.get_command_output(cmd)
            if "anaconda-ks.cfg" in status:
                return True, None
            else:
                return "Key setup failed", "err"
        else:
            return "Username or IP not found", "err"
    except Exception, e:
        return False, e


def ssh_dir_permissions(user='root'):
    try:
        perm = "chown -R root:root /root/.ssh/"
        (ret, rc), err = command.execute_with_rc(perm, True)
        ssh_perm = "chmod 700 /root/.ssh"
        (ret, rc), err = command.execute_with_rc(ssh_perm, True)
        authorized_key = "chmod 640 /root/.ssh/authorized_keys"
        (ret, rc), err = command.execute_with_rc(authorized_key, True)
        return True, None
    except Exception, e:
        return False, e


def get_ssh_key():
    try:
        copyfile("/root/.ssh/id_rsa.pub",
                 "/opt/integralstor/integralstor_unicell/integral_view/static/id_rsa.pub")
        return "id_rsa.pub"
    except Exception, e:
        return False


def get_host_identity_key():
    try:
        copyfile("/etc/ssh/ssh_host_rsa_key.pub",
                 "/opt/integralstor/integralstor_unicell/integral_view/static/ssh_host_rsa_key.pub")
        return "ssh_host_rsa_key.pub"
    except Exception, e:
        return False


def main():
    # print regenerate_ssh_key('root')
    # print get_ssh_key()
    #add_key = 'ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA3o29Pu4c5eLj1Yqm2gi8kHYaO8ckkl2CAoe5hSB8Zgn67LnCxD9PY+aWnmbYFCyqY/XBmU3uCNG0mYaBumv0qOkqgUo4/94NeP7f/JQhVqMeWE/Obi0L4fpbX7Rhva5VZr29d+syWv6Z9E30QstTL59dqw8jhrjaHbRCX3Ag7IXW3ydsYEI4em4ctrTTnl2Ucq7Na6NfrnoH/QRbaZZ7y3T8m6BoSTw6NQ0B5KPmOqRPKoEbmq767JobxaenVMcwSIhLmVd5v+HSZ7JMecrjJFmXcta2l6ibUlFLoIwHga09VtLnVrNb/dzL2PGGA7XiVVsFziKFkaRDJpCP89qZ4w== root@unicell-c8a6.integralstor.lan'
    # print add_ssh_key(add_key,'root')
    print test_ssh(ip='182.74.88.170')


if __name__ == "__main__":
    main()

# vim: tabstop=8 softtabstop=0 expandtab ai shiftwidth=4 smarttab
