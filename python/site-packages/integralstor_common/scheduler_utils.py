from integralstor_common import common
from crontab import CronTab
import re
"""
  function to create a cron job
  Parameters :
  0 Name of the cron job
  1 Minute 0-59
  2 Hour 0-23 (0 = midnight)
  3 Day 1-31
  4 Month 1-12
  5 Weekday 0-6 (0 = Sunday) 
  6 Command to be executed. do not pass >> logfile 2>&1. It will be autocreated with the cronjob name
  Notes :
  Time value passing : 
    */1 wont work. It will be auto resolved to *. This actually means every 1 minute. So * indicates every time (minute or hour)
    Passing a list of values should be in string format. " '2-4,56',*,*,*,* "
  Command value passing :
    Pass the command along with the log file you want. If no log file is mentioned, the a default log file with the comment id will be generated.

"""

log_path = common.get_log_folder_path()

def create_cron(cron_name,min="1",hour='*',day='*',dow='*',month='*',command=None,log_file=None):
  cron = CronTab(user='root')
  if log_file is None:
    log_file =  re.sub(" ","_",cron_name)
  command = command + " >> " +log_path+"/"+log_file+ ".log 2>&1"
  job  = cron.new(command=command,comment=cron_name)
  job.setall(min,hour,day,dow,month)
  if job.is_valid():
    job.enable()
    cron.write()
  else:
    return None,"Job Not Valid. Please recheck the job created"
  return True,None

# Function to return all the user created cron
def list_all_cron():
  cron = CronTab(user='root')
  cron_list = []
  for job in cron:
    if job.comment:
      cron_list.append(job)
  return cron_list,None

# Function to find a specific cron by comment / cron_name
def find_cron(name):
  cron = CronTab(user='root')
  try:
    job = cron.find_comment(name)
    return job,None
  except Exception,e:
    return "Error",e

# Delete a cron, given a comment / cron_name 
def delete_cron_with_comment(name):
  cron = CronTab(user='root')
  try:
    cron.remove_all(comment=name)
    cron.write()
    return True,None
  except Exception, e:
    return "Error",e


def main():
  #print create_cron("ZFS Snap Testing",2,'*','*','*','*',command="/sbin/zfs snapshot pool1@$(date +'%F_%H-%M')")
  print list_all_cron()
  #print delete_cron_with_comment("test spacing")
  #cron = None
  #cron =  find_cron("test")
  #for param in cron:
  #  print param.command

if __name__ == "__main__":
  main()
